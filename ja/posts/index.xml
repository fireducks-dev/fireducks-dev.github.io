<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>/ja/posts/</link><description>Recent content in Posts on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 23 Oct 2023 08:47:36 +0000</lastBuildDate><atom:link href="/ja/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Pythonの高速データフレームライブラリFireDucksを使ってみた</title><link>/ja/posts/nes_taxi/</link><pubDate>Mon, 23 Oct 2023 08:47:36 +0000</pubDate><guid>/ja/posts/nes_taxi/</guid><description>pandasは，プログラミング言語Pythonにおいて，データ解析を支援する機能を提供するライブラリである． NECの研究所では高速化版pandasであるFireDucksというライブラリを開発している．
データの準備 #
ニューヨークのタクシーの乗降者履歴のデータを対象に分析を行う． データの出典は以下である：
https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page
大規模データの解析を行うため，上記リンクから「Yellow Taxi Trip Records」を2022年1月から2023年6月までのデータをダウンロードし結合した． データはparquet形式で提供されているが，日頃良く使うcsv形式で試すために変換しておく． 参考までにデータ準備用のスクリプトを付記しておく．
import pandas as pd import os dir = &amp;quot;xxx&amp;quot; df_list = [] for year in [2022, 2023]: for i in range(12): month = str(i+1).zfill(2) fn = f&amp;quot;yellow_tripdata_{year}-{month}.parquet&amp;quot; file = os.path.join(dir, fn) if not os.path.exists(file): continue df = pd.read_parquet(fn) df_list.append(df) all_df = pd.concat(df_list) all_df.to_csv(&amp;quot;taxi_all.csv&amp;quot;) データの中身は以下のような値が入っている（列は一部抜粋）．
列名 データ型 説明 passenger_count int 乗車人数 pu_location_Id string タクシーメーターが作動し始めたTLCタクシーゾーン． do_location_Id string タクシーメーターが解除されたTLCタクシーゾーン． tpep_dropoff_datetime string メーターが解除された日時． tpep_pickupdate_time string メーターが作動し始めた日時． trip_distance double タクシーメーターによって報告された走行距離（マイル単位）． total_amount double 乗客に請求される合計金額． ※現金のチップは含まれない． extra double その他の割増料金と追加料金．現在，これには0.</description></item></channel></rss>